sudo: required
language: bash
git:
  depth: 1

before_install:
  - . test-helpers/helpers.sh
  - travis_fold utils_setup
  - travis_fold docker_setup
  - travis_fold gce_setup

install: true

# This is too messy... Needs to be dumped into a bash script or something.
# Works for today.
script:
  - . test-helpers/helpers.sh
  - travis_fold generate_safe_tag
  - travis_fold generate_cluster_name
  - travis_fold boot_gke_cluster
  - travis_fold docker_login
  - travis_fold docker_get_jwt
  - travis_fold docker_pull_build_push
  - travis_fold prep_pxc_cluster
  - travis_fold boot_pxc_cluster
  - travis_fold check_logs mysql-0
  - travis_fold wait_for_pod mysql-1
  - travis_fold check_logs mysql-1
  - travis_fold wait_for_pod mysql-2
  - travis_fold check_logs mysql-2
  - travis_fold boot_proxysql
  - travis_fold sleep 30
  - travis_fold check_logs proxysql-0
  - travis_fold boot_test_artifact
  - travis_fold whack_test_artifact
  - travis_fold check_logs php-test-artifact-0
  - travis_fold untag_images
  - travis_fold docker_expire_jwt
  - travis_fold gcloud container clusters delete $CLUSTER_NAME

after_failure:
  - "echo -n \"mysql 0: $LOGS_0\""
  - "echo -n \"mysql 1: $LOGS_1\""
  - "echo -n \"mysql 2: $LOGS_2\""
  - "echo -n \"proxysql: $PROXYSQL_LOGS\""
  - "echo -n \"webserver: $PHP_TEST_ARTIFACT_LOGS\""
  - "echo -n \"ab results: $AB_RESULTS\""

after_success:
  - "echo -n \"webserver: $PHP_TEST_ARTIFACT_LOGS\""
  - "echo -n \"ab results: $AB_RESULTS\""  

deploy:
  # deploy develop to the staging environment
  # - provider: script
  #   script: bash scripts/deploy.sh staging
  #   on:
  #     branch: develop
  # deploy master to production
  - provider: script
    script: |-
      . test-helpers/helpers.sh
      travis_fold deploy
    on:
      branch: master
